versions pytest-2.7.1, py-1.4.27, python-3.4.3.final.0
cwd=/Users/tantony/dev/mjgrant-beluga/tests
args=['--debug', 'optim']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x101842048>
    pytest_plugin_registered [hook]
        plugin: <Session 'optim'>
        manager: <_pytest.config.PytestPluginManager object at 0x10183a2e8>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x101842048>
    configured with mode set to 'rewrite' [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x10647d2b0>
          manager: <_pytest.config.PytestPluginManager object at 0x10183a2e8>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'optim'>
      pytest_plugin_registered [hook]
          plugin: <_pytest.python.FixtureManager object at 0x10647cb70>
          manager: <_pytest.config.PytestPluginManager object at 0x10183a2e8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          startdir: /Users/tantony/dev/mjgrant-beluga/tests
          config: <_pytest.config.Config object at 0x101842048>
      finish pytest_report_header --> [['rootdir: /Users/tantony/dev/mjgrant-beluga/tests/optim, inifile: '], ['using: pytest-2.7.1 pylib-1.4.27']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'optim'>
    perform_collect <Session 'optim'> ['optim'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'optim'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'optim'>
        processing argument /Users/tantony/dev/mjgrant-beluga/tests/optim [collection]
            pytest_ignore_collect [hook]
                path: /Users/tantony/dev/mjgrant-beluga/tests/optim/__pycache__
                config: <_pytest.config.Config object at 0x101842048>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/tantony/dev/mjgrant-beluga/tests/optim/__pycache__
                parent: <Session 'optim'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py
                config: <_pytest.config.Config object at 0x101842048>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py
                parent: <Session 'optim'>
              pytest_pycollect_makemodule [hook]
                  path: /Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py
                  parent: <Session 'optim'>
              finish pytest_pycollect_makemodule --> <Module 'test_scaling.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_scaling.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /Users/tantony/dev/mjgrant-beluga/tests/optim/__pycache__/test_scaling.cpython-34-PYTEST.pyc
                config: <_pytest.config.Config object at 0x101842048>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/tantony/dev/mjgrant-beluga/tests/optim/__pycache__/test_scaling.cpython-34-PYTEST.pyc
                parent: <Session 'optim'>
            finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_scaling.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_scaling.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_scaling.py'>
      find_module called for: test_scaling [assertion]
      matched test file '/Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py' [assertion]
      _read_pyc(/Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py): invalid or out of date pyc [assertion]
      rewriting '/Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py' [assertion]
        pytest_pycollect_makeitem [hook]
            obj: <function teardown_function at 0x10649a158>
            collector: <Module 'test_scaling.py'>
            name: teardown_function
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/tantony/dev/mjgrant-beluga/tests/optim/__pycache__/test_scaling.cpython-34-PYTEST.pyc
            collector: <Module 'test_scaling.py'>
            name: __cached__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'beluga.optim.Problem.Problem'>
            collector: <Module 'test_scaling.py'>
            name: Problem
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '_pytest.assertion.rewrite' from '/Users/tantony/anaconda/lib/python3.4/site-packages/_pytest/assertion/rewrite.py'>
            collector: <Module 'test_scaling.py'>
            name: @pytest_ar
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'builtins' (built-in)>
            collector: <Module 'test_scaling.py'>
            name: @py_builtins
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x106410b00>
            collector: <Module 'test_scaling.py'>
            name: __loader__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_scale at 0x10649a268>
            collector: <Module 'test_scaling.py'>
            name: test_scale
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106487c88>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_scale'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: ModuleSpec(name='test_scaling', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x106410b00>)
            collector: <Module 'test_scaling.py'>
            name: __spec__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: test_scaling
            collector: <Module 'test_scaling.py'>
            name: __name__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module 'test_scaling.py'>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'pytest' from '/Users/tantony/anaconda/lib/python3.4/site-packages/pytest.py'>
            collector: <Module 'test_scaling.py'>
            name: pytest
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'beluga.optim.Scaling.Scaling'>
            collector: <Module 'test_scaling.py'>
            name: Scaling
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'beluga.bvpsol.Solution.Solution'>
            collector: <Module 'test_scaling.py'>
            name: Solution
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'beluga.optim.NecessaryConditions.NecessaryConditions'>
            collector: <Module 'test_scaling.py'>
            name: NecessaryConditions
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'beluga.bvpsol.BVP.BVP'>
            collector: <Module 'test_scaling.py'>
            name: BVP
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function setup_function at 0x10649a1e0>
            collector: <Module 'test_scaling.py'>
            name: setup_function
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: 
            collector: <Module 'test_scaling.py'>
            name: __package__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: {'print': <built-in function print>, 'memoryview': <class 'memoryview'>, 'ResourceWarning': <class 'ResourceWarning'>, 'id': <built-in function id>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'abs': <built-in function abs>, 'locals': <built-in function locals>, 'RuntimeError': <class 'RuntimeError'>, 'bin': <built-in function bin>, 'DeprecationWarning': <class 'DeprecationWarning'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'AttributeError': <class 'AttributeError'>, '__build_class__': <built-in function __build_class__>, 'ImportError': <class 'ImportError'>, 'len': <built-in function len>, 'EOFError': <class 'EOFError'>, 'round': <built-in function round>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'hash': <built-in function hash>, 'FileExistsError': <class 'FileExistsError'>, 'bool': <class 'bool'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'tuple': <class 'tuple'>, 'TypeError': <class 'TypeError'>, 'BufferError': <class 'BufferError'>, 'type': <class 'type'>, 'Warning': <class 'Warning'>, 'getattr': <built-in function getattr>, 'issubclass': <built-in function issubclass>, 'ConnectionError': <class 'ConnectionError'>, 'enumerate': <class 'enumerate'>, 'FloatingPointError': <class 'FloatingPointError'>, 'vars': <built-in function vars>, 'IndexError': <class 'IndexError'>, 'sorted': <built-in function sorted>, 'any': <built-in function any>, 'KeyError': <class 'KeyError'>, 'BaseException': <class 'BaseException'>, 'hasattr': <built-in function hasattr>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'sum': <built-in function sum>, 'next': <built-in function next>, 'all': <built-in function all>, 'NotImplemented': NotImplemented, 'eval': <built-in function eval>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'delattr': <built-in function delattr>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'chr': <built-in function chr>, 'set': <class 'set'>, 'NotImplementedError': <class 'NotImplementedError'>, 'PermissionError': <class 'PermissionError'>, 'divmod': <built-in function divmod>, 'InterruptedError': <class 'InterruptedError'>, 'IndentationError': <class 'IndentationError'>, 'compile': <built-in function compile>, 'help': Type help() for interactive help, or help(object) for help about object., 'SystemError': <class 'SystemError'>, 'exec': <built-in function exec>, 'FutureWarning': <class 'FutureWarning'>, 'ChildProcessError': <class 'ChildProcessError'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'classmethod': <class 'classmethod'>, 'LookupError': <class 'LookupError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'int': <class 'int'>, 'ArithmeticError': <class 'ArithmeticError'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'TimeoutError': <class 'TimeoutError'>, 'pow': <built-in function pow>, '__name__': 'builtins', 'ImportWarning': <class 'ImportWarning'>, 'super': <class 'super'>, 'reversed': <class 'reversed'>, 'ValueError': <class 'ValueError'>, 'Ellipsis': Ellipsis, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'hex': <built-in function hex>, 'license': Type license() to see the full license text, 'SyntaxWarning': <class 'SyntaxWarning'>, 'bytearray': <class 'bytearray'>, 'slice': <class 'slice'>, 'UserWarning': <class 'UserWarning'>, 'isinstance': <built-in function isinstance>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, '__package__': '', 'complex': <class 'complex'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'map': <class 'map'>, 'iter': <built-in function iter>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'callable': <built-in function callable>, 'IOError': <class 'OSError'>, 'max': <built-in function max>, 'GeneratorExit': <class 'GeneratorExit'>, 'range': <class 'range'>, 'OverflowError': <class 'OverflowError'>, 'False': False, 'bytes': <class 'bytes'>, 'min': <built-in function min>, 'BytesWarning': <class 'BytesWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SystemExit': <class 'SystemExit'>, 'MemoryError': <class 'MemoryError'>, 'ord': <built-in function ord>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'repr': <built-in function repr>, 'list': <class 'list'>, 'staticmethod': <class 'staticmethod'>, 'property': <class 'property'>, 'object': <class 'object'>, 'dir': <built-in function dir>, 'EnvironmentError': <class 'OSError'>, 'TabError': <class 'TabError'>, 'None': None, 'globals': <built-in function globals>, 'StopIteration': <class 'StopIteration'>, 'ascii': <built-in function ascii>, 'oct': <built-in function oct>, 'str': <class 'str'>, 'ConnectionResetError': <class 'ConnectionResetError'>, '__debug__': True, 'True': True, 'open': <built-in function open>, 'SyntaxError': <class 'SyntaxError'>, 'setattr': <built-in function setattr>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'format': <built-in function format>, 'frozenset': <class 'frozenset'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'input': <built-in function input>, 'dict': <class 'dict'>, 'filter': <class 'filter'>, 'AssertionError': <class 'AssertionError'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'BlockingIOError': <class 'BlockingIOError'>, 'float': <class 'float'>, 'zip': <class 'zip'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'NameError': <class 'NameError'>, '__import__': <built-in function __import__>, 'OSError': <class 'OSError'>, 'UnicodeError': <class 'UnicodeError'>, 'Exception': <class 'Exception'>, 'ReferenceError': <class 'ReferenceError'>}
            collector: <Module 'test_scaling.py'>
            name: __builtins__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/tantony/dev/mjgrant-beluga/tests/optim/test_scaling.py
            collector: <Module 'test_scaling.py'>
            name: __file__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x100200280>
            collector: <Module 'test_scaling.py'>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__dir__' of 'module' objects>
            collector: <Module 'test_scaling.py'>
            name: __dir__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__le__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __le__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__ge__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __ge__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__lt__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __lt__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__ne__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __ne__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__eq__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __eq__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__gt__' of 'object' objects>
            collector: <Module 'test_scaling.py'>
            name: __gt__
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_scaling.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function 'test_scale'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_scale'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_scaling.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<Function 'test_scale'>]
          session: <Session 'optim'>
          config: <_pytest.config.Config object at 0x101842048>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'optim'>
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function 'test_scale'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'optim'>
      pytest_runtest_protocol [hook]
          nextitem: None
          item: <Function 'test_scale'>
        pytest_runtest_logstart [hook]
            nodeid: test_scaling.py::test_scale
            location: ('test_scaling.py', 10, 'test_scale')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_scale'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_scale'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_scaling.py::test_scale' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_scaling.py::test_scale' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_scaling.py::test_scale' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_scale'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_scale'>
          find_module called for: sympy.parsing.sympy_parser [assertion]
          find_module called for: sympy.parsing.sympy_tokenize [assertion]
          find_module called for: sympy.vector [assertion]
          find_module called for: sympy.vector.vector [assertion]
          find_module called for: sympy.vector.coordsysrect [assertion]
          find_module called for: sympy.vector.scalar [assertion]
          find_module called for: sympy.vector.orienters [assertion]
          find_module called for: sympy.vector.basisdependent [assertion]
          find_module called for: sympy.vector.dyadic [assertion]
          find_module called for: sympy.vector.deloperator [assertion]
          find_module called for: sympy.vector.functions [assertion]
          find_module called for: sympy.vector.point [assertion]
          find_module called for: scipy.optimize [assertion]
          find_module called for: scipy.optimize.optimize [assertion]
          find_module called for: scipy.optimize.linesearch [assertion]
          find_module called for: scipy.optimize.minpack2 [assertion]
          find_module called for: scipy.optimize._minimize [assertion]
          find_module called for: scipy.optimize._trustregion_dogleg [assertion]
          find_module called for: scipy.optimize._trustregion [assertion]
          find_module called for: scipy.optimize._trustregion_ncg [assertion]
          find_module called for: scipy.optimize.anneal [assertion]
          find_module called for: scipy.optimize.lbfgsb [assertion]
          find_module called for: scipy.optimize._lbfgsb [assertion]
          find_module called for: scipy.optimize.tnc [assertion]
          find_module called for: scipy.optimize.moduleTNC [assertion]
          find_module called for: scipy.optimize.cobyla [assertion]
          find_module called for: scipy.optimize._cobyla [assertion]
          find_module called for: scipy.optimize.slsqp [assertion]
          find_module called for: scipy.optimize._slsqp [assertion]
          find_module called for: scipy.optimize._root [assertion]
          find_module called for: scipy.optimize.minpack [assertion]
          find_module called for: scipy.optimize._minpack [assertion]
          find_module called for: scipy.optimize.nonlin [assertion]
          find_module called for: scipy.sparse [assertion]
          find_module called for: scipy.sparse.base [assertion]
          find_module called for: scipy.sparse.sputils [assertion]
          find_module called for: scipy.sparse.csr [assertion]
          find_module called for: scipy.sparse._sparsetools [assertion]
          find_module called for: scipy.sparse.compressed [assertion]
          find_module called for: scipy.sparse.data [assertion]
          find_module called for: scipy.sparse.lil [assertion]
          find_module called for: scipy.sparse._csparsetools [assertion]
          find_module called for: scipy.sparse.numpy [assertion]
          find_module called for: scipy.sparse.dia [assertion]
          find_module called for: scipy.sparse.csc [assertion]
          find_module called for: scipy.sparse.dok [assertion]
          find_module called for: scipy.sparse.coo [assertion]
          find_module called for: scipy.sparse.bsr [assertion]
          find_module called for: scipy.sparse.construct [assertion]
          find_module called for: scipy.sparse.extract [assertion]
          find_module called for: scipy.sparse.csgraph [assertion]
          find_module called for: scipy.sparse.csgraph._components [assertion]
          find_module called for: scipy.sparse.csgraph._laplacian [assertion]
          find_module called for: scipy.sparse.csgraph._shortest_path [assertion]
          find_module called for: scipy.sparse.csgraph.warnings [assertion]
          find_module called for: scipy.sparse.csgraph.numpy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph._validation [assertion]
          find_module called for: scipy.sparse.csgraph._tools [assertion]
          find_module called for: scipy.sparse.csgraph.numpy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph._traversal [assertion]
          find_module called for: scipy.sparse.csgraph.numpy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph._min_spanning_tree [assertion]
          find_module called for: scipy.sparse.csgraph.numpy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.csgraph._reordering [assertion]
          find_module called for: scipy.sparse.csgraph.numpy [assertion]
          find_module called for: scipy.sparse.csgraph.scipy [assertion]
          find_module called for: scipy.sparse.linalg [assertion]
          find_module called for: scipy.sparse.linalg.isolve [assertion]
          find_module called for: scipy.sparse.linalg.isolve.iterative [assertion]
          find_module called for: scipy.sparse.linalg.isolve._iterative [assertion]
          find_module called for: scipy.sparse.linalg.interface [assertion]
          find_module called for: scipy.lib.decorator [assertion]
          find_module called for: scipy.sparse.linalg.isolve.utils [assertion]
          find_module called for: scipy.sparse.linalg.isolve.minres [assertion]
          find_module called for: scipy.sparse.linalg.isolve.lgmres [assertion]
          find_module called for: scipy.sparse.linalg.isolve.lsqr [assertion]
          find_module called for: scipy.sparse.linalg.isolve.lsmr [assertion]
          find_module called for: scipy.sparse.linalg.dsolve [assertion]
          find_module called for: scipy.sparse.linalg.dsolve.linsolve [assertion]
          find_module called for: scipy.sparse.linalg.dsolve._superlu [assertion]
          find_module called for: scikits [assertion]
          find_module called for: scipy.sparse.linalg.dsolve._add_newdocs [assertion]
          find_module called for: scipy.sparse.linalg.eigen [assertion]
          find_module called for: scipy.sparse.linalg.eigen.arpack [assertion]
          find_module called for: scipy.sparse.linalg.eigen.arpack.arpack [assertion]
          find_module called for: scipy.sparse.linalg.eigen.arpack._arpack [assertion]
          find_module called for: scipy.sparse.linalg.eigen.lobpcg [assertion]
          find_module called for: scipy.sparse.linalg.eigen.lobpcg.lobpcg [assertion]
          find_module called for: scipy.sparse.linalg.matfuncs [assertion]
          find_module called for: scipy.misc [assertion]
          find_module called for: scipy.misc.doccer [assertion]
          find_module called for: scipy.misc.common [assertion]
          find_module called for: scipy.misc.pilutil [assertion]
          find_module called for: PIL.ImageFilter [assertion]
          find_module called for: scipy.lib._numpy_compat [assertion]
          find_module called for: scipy.sparse.linalg._onenormest [assertion]
          find_module called for: scipy.sparse.linalg._expm_multiply [assertion]
          find_module called for: scipy.optimize.zeros [assertion]
          find_module called for: scipy.optimize._zeros [assertion]
          find_module called for: scipy.optimize.nnls [assertion]
          find_module called for: scipy.optimize._nnls [assertion]
          find_module called for: scipy.optimize._basinhopping [assertion]
          find_module called for: scipy.optimize._linprog [assertion]
          find_module called for: scipy.optimize._differentialevolution [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_scale'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_scaling.py::test_scale' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_scaling.py::test_scale' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_scaling.py::test_scale' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            nextitem: None
            item: <Function 'test_scale'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_scale'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_scaling.py::test_scale' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_scaling.py::test_scale' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_scaling.py::test_scale' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        exitstatus: 0
        session: <Session 'optim'>
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x10647d2b0>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x101842048>
    finish [config:tmpdir]
